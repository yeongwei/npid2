#!/bin/bash

## ==========================================================
## 1. Various routine block that comply to user command
## 2. User command example; start, stop, restart ...
## ==========================================================

##
##
defaultLog="GYMPB0000I Application name is missing / incorrect."

##
## For CMD "start"
##
startRoutine() {
	case "${1}" in
		"${ZOOKEEPER_APP_NAME}")
			startZookeeper
		;;
		"${KAFKA_APP_NAME}")
			startKafka
		;;
		"${HADOOP_APP_NAME}")
			startHadoop
		;;
		"${NPI_APP_NAME}"-* | "${NPI_APP_NAME}")
			startNpi ${1}
		;;
		"all")
			startZookeeper
			sleep ${SLEEP_TIME}
			startKafka
			sleep ${SLEEP_TIME}
			startHadoop
			sleep ${SLEEP_TIME}
			startNpi "npi"
		;;
		*)
			log INFO ${defaultLog}
			npidUsage
		;;
	esac
}

##
## For CMD "stop"
##
stopRountine() {
	case "${1}" in 
		"${ZOOKEEPER_APP_NAME}")
			stopZookeeper
		;;
		"${KAFKA_APP_NAME}")
			stopKafka
		;;
		"${HADOOP_APP_NAME}")
			stopHadoop
		;;
		"${NPI_APP_NAME}"-* | "${NPI_APP_NAME}")
			stopNpi ${1}
		;;
		*)
			log INFO ${defaultLog}
			npidUsage
		;;
	esac
}

##
## For CMD "restart"
##
restartRoutine() {
	case "${1}" in 
		"${ZOOKEEPER_APP_NAME}")
			stopZookeeper
			sleep ${SLEEP_TIME}
			startZookeeper
		;;
		"${KAFKA_APP_NAME}")
			stopKafka
			sleep ${SLEEP_TIME}
			startKafka
		;;
		"${HADOOP_APP_NAME}")
			stopHadoop
			sleep ${SLEEP_TIME}
			startHadoop
		;;
		"${NPI_APP_NAME}"-* | "${NPI_APP_NAME}")
			stopNpi ${1}
			sleep ${SLEEP_TIME}
			startNpi ${1}
		;;
		*)
			log INFO ${defaultLog}
			npidUsage
		;;
	esac
}

##
## For CMD "kill"
##
killRoutine() {
	case "${1}" in 
		"${ZOOKEEPER_APP_NAME}") ;;
		"${KAFKA_APP_NAME}") ;;
		"${HADOOP_APP_NAME}") ;;
		"${NPI_APP_NAME}"-* | "${NPI_APP_NAME}") ;;
		*)
			log INFO "GYMPB0000I: Application name is missing."
			npidUsage
			exit -1 # explicitly, since no error
		;;
	esac
	
	pid=`getPID ${1}`
	if [ -z "${pid}" ]; then
		log INFO "GYMPB0000I: ${1} is not started."
	else 
		killAssociatively9 ${pid}
		removePID ${1}
		log INFO "GYMPB0000I: ${1} has been killed."
	fi
}

##
## For CMD "status"
##
statusRoutine() {
	if [ -z "${1}" ] || [ "${1}" == "all" ]; then
		checkAllStatus
	else
		checkStatus ${1}
	fi
}
