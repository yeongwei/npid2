#!/bin/bash

## ==========================================================
## 1. Various routine block that comply to user command
## 2. User command example; start, stop, restart ...
## ==========================================================

##
##
defaultLog="GYMPB0000I Application name is missing / incorrect."

##
## For CMD "start"
##
startRoutine() {
	case "${1}" in
		"${ZOOKEEPER_APP_NAME}")
			startZookeeper
		;;
		"${KAFKA_APP_NAME}")
			startKafka
		;;
		"${HADOOP_APP_NAME}")
			startHadoop
		;;
		"${NPI_STORAGE_APP_NAME}" | "${NPI_ANALYTICS_APP_NAME}" | "${NPI_COLLECTOR_APP_NAME}" | "${NPI_UI_APP_NAME}")
			startNpi ${1}
		;;
		"${NPI_APP_NAME}")
			startNpi ${NPI_STORAGE_APP_NAME}; sleep ${SLEEP_TIME}
			startNpi ${NPI_ANALYTICS_APP_NAME}; sleep ${SLEEP_TIME}
			startNpi ${NPI_COLLECTOR_APP_NAME}; sleep ${SLEEP_TIME}
			startNpi ${NPI_UI_APP_NAME}
		;;
		"all")
			startZookeeper; sleep ${SLEEP_TIME}
			startKafka; sleep ${SLEEP_TIME}
			startHadoop; sleep ${SLEEP_TIME}

			startNpi ${NPI_STORAGE_APP_NAME}; sleep ${SLEEP_TIME}
			startNpi ${NPI_ANALYTICS_APP_NAME}; sleep ${SLEEP_TIME}
			startNpi ${NPI_COLLECTOR_APP_NAME}; sleep ${SLEEP_TIME}
			startNpi ${NPI_UI_APP_NAME}
		;;
		*)
			log INFO ${defaultLog}
			npidUsage
		;;
	esac
}

##
## For CMD "stop"
##
stopRountine() {
	case "${1}" in 
		"${ZOOKEEPER_APP_NAME}")
			stopZookeeper
		;;
		"${KAFKA_APP_NAME}")
			stopKafka
		;;
		"${HADOOP_APP_NAME}")
			stopHadoop
		;;
		# "${NPI_STORAGE_APP_NAME}" | "${NPI_ANALYTICS_APP_NAME}" | "${NPI_COLLECTOR_APP_NAME}" | "${NPI_UI_APP_NAME}")
		#	stopNpi ${1}
		# ;;
		"${NPI_APP_NAME}")
			stopNpi "npi"
		;;
		"all")
			stopNpi "npi"; sleep ${SLEEP_TIME}
			stopHadoop; sleep ${SLEEP_TIME}
			stopKafka; sleep ${SLEEP_TIME}
			stopZookeeper
		;;
		*)
			log INFO ${defaultLog}; npidUsage
		;;
	esac
}

##
## For CMD "restart"
##
restartRoutine() {
	case "${1}" in 
		"${ZOOKEEPER_APP_NAME}")
			stopZookeeper; sleep ${SLEEP_TIME}; startZookeeper
		;;
		"${KAFKA_APP_NAME}")
			stopKafka; sleep ${SLEEP_TIME}; startKafka
		;;
		"${HADOOP_APP_NAME}")
			stopHadoop; sleep ${SLEEP_TIME}; startHadoop
		;;
		# "${NPI_STORAGE_APP_NAME}" | "${NPI_ANALYTICS_APP_NAME}" | "${NPI_COLLECTOR_APP_NAME}" | "${NPI_UI_APP_NAME}")
		#	stopNpi ${1}; sleep ${SLEEP_TIME}; startNpi ${1}
		# ;;
		"${NPI_APP_NAME}")
			stopNpi "npi"; sleep ${SLEEP_TIME}; stopNpi "npi"
		;;
		*)
			log INFO ${defaultLog}; npidUsage
		;;
	esac
}

##
## For CMD "kill"
##
killRoutineHelper() {
	errors=0
	pidStatus=`ps -ef | grep ${1} | grep -v grep`
	if [ -z "${pidStatus}" ]; then
		errors=$(( ${errors} + 1 ))
	else
		killAssociatively9 ${1}

		tryCount=${TRY_COUNT}
		isKilled=0

		while [ $tryCount -ne 0 ]; do
			psStatus=`ps -ef | grep ${pid} | grep -v grep`
			if [ -z "${psStatus}" ]; then
				isKilled=1
				break
			fi
			sleep ${SLEEP_TIME}
			tryCount=$(( ${tryCount} - 1 ))
		done

		if [ ${isKilled} -ne 1 ]; then
			errors=$(( ${errors} + 1 ))
		fi
	fi

	if [ ${errors} -eq 0 ]; then
		echo 1
	else
		echo 0
	fi
}

killRoutineHelper2() {
	pid=`getPID ${1}`
	if [ -z "${pid}" ]; then
		log INFO "GYMPB0000I: ${1} is not started."
	else 
		killAssociatively9 ${pid}
		
		tryCount=${TRY_COUNT}
		isKilled=0

		while [ $tryCount -ne 0 ]; do
			psStatus=`ps -ef | grep ${pid} | grep -v grep`
			if [ -z "${psStatus}" ]; then
				isKilled=1
				break
			fi
			sleep ${SLEEP_TIME}
			tryCount=$(( ${tryCount} - 1 ))
		done
		
		if [ ${isKilled} -eq 1 ]; then
			removePID ${1}
			log INFO "GYMPB0000I: ${1} has been killed."
		else
			log ERROR "GYMPB0000I: Unable to kill ${1} with PID ${pid}."
		fi
	fi
}

##
## For CMD "kill"
## Uses the kill -9 <PID>
## Only could kill local processes NOT remote
##
killRoutine() {
	case "${1}" in 
		"${ZOOKEEPER_APP_NAME}") ;;
		"${KAFKA_APP_NAME}") ;;
		"${HADOOP_APP_NAME}") 
			hadoopPidFiles=(`getHadoopPidFiles`)
			successKill=0
			for pidFile in "${hadoopPidFiles[@]}"; do
				pid=`head -1 ${pidFile}`
				killStatus=`killRoutineHelper ${pid}`
				if [ ${killStatus} -eq 1 ]; then
					successKill=$(( ${successKill} + 1 ))
					rm ${pidFile}
				else
					log ERROR "GYMPB0000E: Unable to kill ${pid}."
				fi
			done
			
			if [ ${successKill} -eq ${#hadoopPidFiles[@]} ]; then
				log INFO "GYMPB0000I: ${HADOOP_READABLE} killed."
			else
				log ERROR "GYMPB0000r: ${HADOOP_READABLE} not killed."
			fi
		;;
		# "${NPI_STORAGE_APP_NAME}" | "${NPI_ANALYTICS_APP_NAME}" | "${NPI_COLLECTOR_APP_NAME}" | "${NPI_UI_APP_NAME}") ;;
		"${NPI_APP_NAME}") ;;
		"all")
			# This rountine is not clean, need revision ???
			killRoutineHelper "npi"; sleep ${SLEEP_TIME}
			killRoutineHelper "hadoop"; sleep ${SLEEP_TIME}
			killRoutineHelper "kafka"; sleep ${SLEEP_TIME}
			killRoutineHelper "zookeeper"
			exit 0 # Ends here
		;;
		*)
			log INFO "GYMPB0000I: Application name is missing."
			npidUsage
			exit 0 # explicitly, since no error
		;;
	esac
}

##
## For CMD "status"
##
printZookeeperStatus() {
	if [ `isZookeeperStarted` -eq 1 ]; then
		log INFO "GYMPB0000I: ${ZOOKEEPER_READABLE} started."
	else
		log INFO "GYMPB0000I: ${ZOOKEEPER_READABLE} stopped."
	fi
}

printKafkaStatus() {
	if [ `isKafkaStarted` -eq 1 ]; then
		log INFO "GYMPB0000I: ${KAFKA_READABLE} started."
	else
		log INFO "GYMPB0000I: ${KAFKA_READABLE} stopped."
	fi
}

printHadoopStatus() {
	if [ `isHadoopStarted` -eq 1 ]; then
		log INFO "GYMPB0000I: ${HADOOP_READABLE} started."
	else
		log INFO "GYMPB0000I: ${HADOOP_READABLE} stopped."
	fi
}

printNpiStatus() {
	npiStatus=`getNpiStatus`
	if [ ${npiStatus} -eq 0 ]; then
		log INFO "GYMPB0000I: ${NPI_READABLE} stopped."
	elif [ ${npiStatus} -eq 1 ]; then
		log INFO "GYMPB0000I: ${NPI_READABLE} started."
	elif [ ${npiStatus} -eq 2 ]; then
		log INFO "GYMPB0000I: ${NPI_READABLE} partially started."
	fi
}

statusRoutine() {
	case "${1}" in
		"${ZOOKEEPER_APP_NAME}") 
			printZookeeperStatus
		;;
		"${KAFKA_APP_NAME}") 
			printKafkaStatus		
		;;
		"${HADOOP_APP_NAME}") 
			printHadoopStatus		
		;;
		"${NPI_STORAGE_APP_NAME}" | "${NPI_ANALYTICS_APP_NAME}" | "${NPI_COLLECTOR_APP_NAME}" | "${NPI_UI_APP_NAME}") 
			printNpiStatus
		;;
		"${NPI_APP_NAME}") ;;
		"all")
			printZookeeperStatus; printKafkaStatus; printHadoopStatus; printNpiStatus
		;;
		*)
			log INFO "GYMPB0000I: Application name is missing."; npidUsage; exit 0 # explicitly, since no error
		;;
	esac
}
